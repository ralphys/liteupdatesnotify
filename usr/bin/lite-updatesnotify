#! /bin/bash
#--------------------------------------------------------------------------------------------------------
# Name: Lite Updates Notify
# Description: Set an Update frequency notification on Linux Lite.
# Authors:  Jerry Bezencon, Ralphy
# Website: https://www.linuxliteos.com
#--------------------------------------------------------------------------------------------------------

# Ensure multi-language support
export LANG=C

# variables
LUN="Lite Updates Notify"
LUNUSER=$(sudo -u ${SUDO_USER:-$USER} whoami)
ic="/usr/share/icons/zenity-llcc.png"
DIR=/var/spool/cron/crontabs
NTFY=/usr/local/sbin/updatesnotify-launcher
file=/etc/sudoers.d/lun
APPICON=/usr/share/liteappsicons/lite-updatesnotify-clock_32x32.png
APPICONDISABLE=/usr/share/liteappsicons/lite-updatesnotify-disable_32x32.png

# Check administrative privileges
if [ $EUID -ne 0 ]; then
    zenity --question --cancel-label="Continue" --ok-label="Authenticate" --window-icon="$ic" --title=" $LUN - Are you Administrator?" \
           --width=400 --height=50 --icon-name=info \
           --text="\nYou need administrative privileges to make changes in $LUN.\n \nClick <b>Continue</b> to continue without administrative privileges \nor <b>Authenticate</b> to enter your password next." --no-wrap
   case $? in
    0) gksu bash $0
       exit;;
    1) :
    esac
fi

# Start main dialogue
while (true); do
# check if user's cron file exists... if doesn't exist, create it and set permissions
if [ ! -f "$DIR/$LUNUSER" ]; then
        (umask 177;touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER)
printf "# DO NOT MANUALLY DELETE OR EDIT THE NEXT 2 LINES
#0 * * * * $LUNUSER ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1
## $LUN - DO NOT MANUALLY DELETE OR EDIT THE ABOVE LINE ######" >> $DIR/$LUNUSER
    else
        if grep -q "$LUN" $DIR/$LUNUSER; then
        :
        else
            chown $LUNUSER:crontab $DIR/$LUNUSER;chmod 600 $DIR/$LUNUSER &&
            printf "# DO NOT MANUALLY DELETE OR EDIT THE NEXT 2 LINES
#0 * * * * $LUNUSER ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1
## $LUN - DO NOT MANUALLY DELETE OR EDIT THE ABOVE LINE ######" >> $DIR/$LUNUSER
        fi
fi

if [ ! -f "$file" ]; then
(umask 337;touch $file)
echo "Defaults visiblepw" >> $file
echo "%sudo ALL=(root) NOPASSWD:/usr/local/sbin/updatesnotify, /usr/local/sbin/updatesnotify-launcher" >> $file
fi

CHFREQ=$(zenity --list --imagelist --print-column=2 --hide-column=2 --width="550" --height=420 --title="     $LUN" --ok-label="Set" --cancel-label="Quit" --window-icon=$ic \
--text='          <span font="Sans Bold 10">Set the Updates notification frequency from the options below:</span>\n' \
--column "          " --column "Schedule#" --column "Frequency" --column "Description" \
"$APPICON" "10" "Hourly" " Once every hour eg. 1pm, 2pm, 3pm etc" \
"$APPICON" "11" "Every 6 Hours" " First run at midnight, then every 6 hours" \
"$APPICON" "12" "Every 12 Hours" " First run at midnight, then every 12 hours" \
"$APPICON" "13" "Daily" "Every day at 7pm" \
"$APPICON" "14" "Every other day    " " Every other day at 7pm" \
"$APPICON" "15" "Weekly" " Once every week at 7pm on a Monday" \
"$APPICON" "16" "Every 2 Weeks" " Once every 2 weeks at 7pm on a Monday" \
"$APPICON" "17" "Every 3 Weeks" " Once every 3 weeks at 7pm on a Monday" \
"$APPICONDISABLE" "20" "Disable                   " " Disable Updates notification")

if [ "$?" -eq "1" ]; then
    exit 0
fi 

if [[ $CHFREQ -eq "0" ]]; then
    zenity --info --width=280 --height=60 --title=" $LUN" --text="\nYou did not select any of the available options. Please try again."
    continue
fi

if [[ $CHFREQ -eq "20" ]]; then
    zenity --question --title=" $LUN" --text="\nAre you sure you want to disable Lite Updates notification?"
    confirm=$?
    if [ "$confirm" -eq "0" ]; then
        rm -f $file
        sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c#0 * * * * ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER  && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                zenity --question --width=380 --height=60 --icon-name=error --title="$LUN - Error" \
                       --text="\n<b>An error occurred while disabling updates notification</b> \n\nYou may not have sufficient permissions to perform this task. \n\nDo you want to Authenticate now and go back to $LUN to try again?"
                       elevate=$?
                       if [ "$elevate" -eq "0" ]; then
                            gksu bash $0
                            exit 1
                        else
                            exit 0
                        fi
                continue
            else
                zenity --info --timeout=3 --title=" $LUN" --text="\nNotification Updates have been disabled!"
                exit 0
            fi
        else
            continue
    fi 
fi

if [[ $CHFREQ -eq "10" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 * * * * ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
elif [[ $CHFREQ -eq "11" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 */6 * * * ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
elif [[ $CHFREQ -eq "12" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 */12 * * * ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
elif [[ $CHFREQ -eq "13" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 19 * * * ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
elif [[ $CHFREQ -eq "14" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 19 */2 * * ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
elif [[ $CHFREQ -eq "15" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 19 */7 * 1 ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
elif [[ $CHFREQ -eq "16" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 19 */14 * 1 ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
elif [[ $CHFREQ -eq "17" ]]; then
    sed -i -n '1!G;h;$p' $DIR/$LUNUSER && sed -i '/ '"$LUN"' /!b;n;c0 19 */21 * 1 ionice -c2 -p\$\$ -n 7;nice -n 19 '"$NTFY"' >/dev/null 2>&1' $DIR/$LUNUSER && sed -i -n '1!G;h;$p' $DIR/$LUNUSER
fi

if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        zenity --question --width=380 --height=60 --icon-name=error --title="$LUN - Error" \
               --text="\n<b>An error occurred while scheduling updates notification</b> \n\nYou may not have sufficient permissions to perform this task. \n\nDo you want to Authenticate now and go back to $LUN to try again?"
                elevate=$?
                if [ "$elevate" -eq "0" ]; then
                    gksu bash $0
                    exit 1
                else
                exit 0
            fi
        continue
    else
        service cron reload
        zenity --width=320 --height=60 --info --timeout=3 --title=" $LUN" --text="\nUpdates notification has been successfully scheduled."
fi
done
exit 0