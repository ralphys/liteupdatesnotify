#! /bin/bash
#--------------------------------------------------------------------------------------------------------
# Name: Lite Updates Notify
# Description: Set an Update frequency notification on Linux Lite.
# Authors:  Jerry Bezencon, Ralphy
# Website: https://www.linuxliteos.com
#--------------------------------------------------------------------------------------------------------

# Ensure multi-language support
export LANG=C

# set the window icon variable
ic="/usr/share/icons/zenity-llcc.png"

LUNUSER=$(sudo -u ${SUDO_USER:-$USER} whoami)  # set sudoer user as variable
DIR=/var/spool/cron/crontabs/                  # set working dir variable
LUN="Lite Updates Notify"                      # Lite Updates Notify Titlebar
UNI="Update Notification Interval"             # UNI Zenity message
NTFY=/usr/local/sbin/updatenotify              # updatenotify variable

# Check administrative privileges
if [ $EUID -ne 0 ]; then
    zenity --question --cancel-label="Continue" --ok-label="Authenticate" --window-icon="$ic" --title=" $LUN - Are you Administrator?" \
           --width=400 --height=50 --icon-name=info \
           --text="\nYou need administrative privileges to make changes in $LUN.\n \nClick <b>Continue</b> to continue without administrative privileges \nor <b>Authenticate</b> to enter your password next." --no-wrap
   case $? in
    0) gksu bash $0
       exit;;
    1) continue
    esac
fi

# Start main dialogue
while (true); do
CHFREQ=$(zenity --list --width="480" --height=320 --title="     $LUN" --ok-label="Set" --cancel-label="Quit" --window-icon=$ic \
--text "Set the Updates notification frequency from the options below:\n" \
--column "     Frequency   " --column "Description" \
" ✔ Hourly" " Once every hour eg. 1pm, 2pm, 3pm etc" \
" ✔ Every 6 Hours" " First run at midnight, then every 6 hours" \
" ✔ Every 12 Hours" " First run at midnight, then every 12 hours" \
" ✔ Daily" " Every day at 7pm" \
" ✔ Every other Day     " " Every other day at 7pm" \
" ✔ Weekly" " Once every week at 7pm on a Monday" \
" ✔ Every 2 Weeks" " Once every 2 weeks at 7pm on a Monday" \
" ✔ Every 3 Weeks" " Once every 3 weeks at 7pm on a Monday" \
" ✘ Disable" "Disable Updates Notification")

if [ "$?" -eq "1" ]; then
    exit 0
fi 

if [[ $CHFREQ =~ Disable ]]; then
    zenity --question --title=" $LUN" --text="\nAre you sure you want to disable Lite Updates notifications?"
    confirm=$?
    if [ "$confirm" -eq "0" ]; then
        rm -rf $DIR/$LUNUSER
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                zenity --question --width=380 --height=60 --icon-name=error --title="$LUN - Error" \
                       --text="\n<b>An error occurred while scheduling updates notification</b> \n\nYou may not have sufficient permissions to perform this task. \n\nDo you want to Authenticate now and go back to $LUN to try again?"
                       elevate=$?
                       if [ "$elevate" -eq "0" ]; then
                            gksu bash $0
                            exit
                        else
                            exit 0
                        fi
                continue
            else
                zenity --info --timeout=3 --title=" $LUN" --text="\nNotification Updates have been disabled!"
                exit 0
            fi
        else
            continue
    fi 
fi
# set cron schedule
if [[ $CHFREQ =~ Hourly ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 * * * * ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
elif [[ $CHFREQ =~ "Every 6 Hours" ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 */6 * * * ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
elif [[ $CHFREQ =~ "Every 12 Hours" ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 */12 * * * ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
elif [[ $CHFREQ =~ Daily ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 19 * * * ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
elif [[ $CHFREQ =~ "Every other Day" ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 19 */2 * * ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
elif [[ $CHFREQ =~ Weekly ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 19 */7 * 1 ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
elif [[ $CHFREQ =~ "Every 2 Weeks" ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 19 */14 * 1 ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
elif [[ $CHFREQ =~ "Every 3 Weeks" ]]; then
    rm -rf $DIR/$LUNUSER && touch $DIR/$LUNUSER && chown $LUNUSER:crontab $DIR/$LUNUSER && chmod 600 $DIR/$LUNUSER && printf "0 19 */21 * 1 ionice -c2 -p\$\$ -n 7;nice -n 19 $NTFY >/dev/null 2>&1" >> $DIR/$LUNUSER
fi

if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        zenity --question --width=380 --height=60 --icon-name=error --title="$LUN - Error" \
               --text="\n<b>An error occurred while scheduling updates notification</b> \n\nYou may not have sufficient permissions to perform this task. \n\nDo you want to Authenticate now and go back to $LUN to try again?"
                elevate=$?
                if [ "$elevate" -eq "0" ]; then
                    gksu bash $0
                    exit
                else
                exit 0
            fi
        continue
    else
        zenity --width=320 --height=60 --info --timeout=3 --title=" $LUN" --text="\nUpdates notification has been successfully scheduled."
fi
done
exit 0
